language: cpp
sudo: false

env:
  global:
    - BUILD_TYPE=Debug

dist: trusty

matrix:
  include:
    # -- core library tests
    - os: linux
      addons:
        apt:
          sources: &ubuntu-sources [kubuntu-backports, ubuntu-toolchain-r-test, george-edison55-precise-backports, deadsnakes]
          packages:  &ubuntu-packages [cmake, g++-5, ninja-build]

    # -- python 3.5
    - os: linux
      env: PYTHON=3.5 CMAKE_EXTRA_ARGS="-Dsparsesolvers_WITH_PYTHON=ON"
      addons:
        apt:
          sources: *ubuntu-sources
          packages: [*ubuntu-packages, python3.5-dev]

install:
  - | 
    if [ -n "$PYTHON" ]; then
      pyenv versions
      pyenv global $PYTHON
      pip install --user --upgrade pip
      pip install --user numpy wheel auditwheel==1.5.0 twine
    fi

before_script:
  # check github rate limit, which can be problematic
  - echo '-H "Authorization:token $GITHUB_AUTH"' > ~/.curlrc
  # set compiler
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export COMPILER=g++-5   ; fi
  # build
  - mkdir build && cd build
  - cmake -GNinja ${CMAKE_EXTRA_ARGS} .. -DCMAKE_CXX_COMPILER=$COMPILER -DCMAKE_BUILD_TYPE=$BUILD_TYPE
  - cmake --build .

script:
  - ctest . -VV -C $BUILD_TYPE


after_success:
  - |
    # pypi binary deployment on tags
    if [ -n "$PYTHON" ]; then
      cmake --build . --target bdist_wheel
    fi

notifications:
  email: false